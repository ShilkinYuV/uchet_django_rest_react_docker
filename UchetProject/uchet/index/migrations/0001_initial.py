# Generated by Django 4.0.1 on 2022-01-13 15:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Cheludi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FIO', models.CharField(max_length=100, verbose_name='ФИО')),
                ('WorksNow', models.BooleanField(default=True, verbose_name='Работает?')),
                ('order', models.CharField(max_length=250, verbose_name='Приказ ввода вывода с удаленки')),
                ('isItMOL', models.BooleanField(default=False, verbose_name='МОЛ?')),
                ('cabinet', models.CharField(max_length=100, verbose_name='Кабинет')),
            ],
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Наименование отдела')),
                ('address', models.TextField(verbose_name='Адресс')),
            ],
        ),
        migrations.CreateModel(
            name='Technics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Наименование')),
                ('serynic', models.CharField(max_length=100, verbose_name='Серийный номер')),
                ('inventarnic', models.CharField(max_length=100, verbose_name='Инвентарный номер')),
                ('state', models.CharField(choices=[('Введен в эксплуатацию', 'Введен в эксплуатацию'), ('Принят к учету', 'Принят к учету')], default='Введен в эксплуатацию', max_length=100, verbose_name='Состояние')),
                ('price', models.CharField(max_length=100, verbose_name='Балансовая стоимость')),
                ('сommissioning_date', models.DateField(verbose_name='Дата ввода в эксплуатацию')),
                ('holder_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, parent_link=True, related_name='chelud', to='index.cheludi')),
                ('MOL_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, parent_link=True, related_name='mol', to='index.cheludi')),
                ('attribute', models.ManyToManyField(to='index.Attribute')),
            ],
        ),
        migrations.CreateModel(
            name='TypeTechnics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Тип техники')),
            ],
        ),
        migrations.CreateModel(
            name='ValueAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.attribute')),
                ('technics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.technics')),
            ],
        ),
        migrations.AddField(
            model_name='technics',
            name='technics_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tech', to='index.typetechnics'),
        ),
        migrations.AddField(
            model_name='technics',
            name='value_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technics_value_attr', to='index.valueattribute'),
        ),
        migrations.AddField(
            model_name='cheludi',
            name='department_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.departments', verbose_name='Отдел'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='technics_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.typetechnics'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
